{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Productos\nexport const fetchProductos = () => api.get('/productos');\n\n// Login local y Google\nexport const loginLocal = data => api.post('/login', data);\nexport const loginGoogle = credential => api.post('/login/google', {\n  credential\n});\n\n// Usuario autenticado\nexport const fetchUsuario = token => api.get('/usuario', {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\n\n// Historial de compras\nexport const fetchCompras = token => api.get('/compra', {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\n\n// Confirmar compra (envÃ­a array de productos con \"id\" y \"cantidad\")\nexport function confirmarCompra(carrito, token) {\n  if (!Array.isArray(carrito)) {\n    throw new Error('ðŸš« El carrito no es un array');\n  }\n  const productos = carrito.map(p => ({\n    id: p.id,\n    cantidad: p.cantidad\n  }));\n  return api.post('/compra', {\n    productos\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","fetchProductos","get","loginLocal","data","post","loginGoogle","credential","fetchUsuario","token","Authorization","fetchCompras","confirmarCompra","carrito","Array","isArray","Error","productos","map","p","id","cantidad"],"sources":["C:/xampp/htdocs/tienda-online-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:8000/api',\r\n  headers: { 'Content-Type': 'application/json' }\r\n})\r\n\r\n// Productos\r\nexport const fetchProductos = () => api.get('/productos')\r\n\r\n// Login local y Google\r\nexport const loginLocal = (data) => api.post('/login', data)\r\nexport const loginGoogle = (credential) => api.post('/login/google', { credential })\r\n\r\n// Usuario autenticado\r\nexport const fetchUsuario = (token) =>\r\n  api.get('/usuario', {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  })\r\n\r\n// Historial de compras\r\nexport const fetchCompras = (token) =>\r\n  api.get('/compra', {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  })\r\n\r\n// Confirmar compra (envÃ­a array de productos con \"id\" y \"cantidad\")\r\nexport function confirmarCompra(carrito, token) {\r\n  if (!Array.isArray(carrito)) {\r\n    throw new Error('ðŸš« El carrito no es un array')\r\n  }\r\n\r\n  const productos = carrito.map(p => ({\r\n    id: p.id,\r\n    cantidad: p.cantidad\r\n  }))\r\n\r\n  return api.post('/compra', { productos }, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  })\r\n}\r\n\r\nexport default api"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB;AAChD,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAMJ,GAAG,CAACK,GAAG,CAAC,YAAY,CAAC;;AAEzD;AACA,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAKP,GAAG,CAACQ,IAAI,CAAC,QAAQ,EAAED,IAAI,CAAC;AAC5D,OAAO,MAAME,WAAW,GAAIC,UAAU,IAAKV,GAAG,CAACQ,IAAI,CAAC,eAAe,EAAE;EAAEE;AAAW,CAAC,CAAC;;AAEpF;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAChCZ,GAAG,CAACK,GAAG,CAAC,UAAU,EAAE;EAClBF,OAAO,EAAE;IAAEU,aAAa,EAAE,UAAUD,KAAK;EAAG;AAC9C,CAAC,CAAC;;AAEJ;AACA,OAAO,MAAME,YAAY,GAAIF,KAAK,IAChCZ,GAAG,CAACK,GAAG,CAAC,SAAS,EAAE;EACjBF,OAAO,EAAE;IAAEU,aAAa,EAAE,UAAUD,KAAK;EAAG;AAC9C,CAAC,CAAC;;AAEJ;AACA,OAAO,SAASG,eAAeA,CAACC,OAAO,EAAEJ,KAAK,EAAE;EAC9C,IAAI,CAACK,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE;IAC3B,MAAM,IAAIG,KAAK,CAAC,8BAA8B,CAAC;EACjD;EAEA,MAAMC,SAAS,GAAGJ,OAAO,CAACK,GAAG,CAACC,CAAC,KAAK;IAClCC,EAAE,EAAED,CAAC,CAACC,EAAE;IACRC,QAAQ,EAAEF,CAAC,CAACE;EACd,CAAC,CAAC,CAAC;EAEH,OAAOxB,GAAG,CAACQ,IAAI,CAAC,SAAS,EAAE;IAAEY;EAAU,CAAC,EAAE;IACxCjB,OAAO,EAAE;MAAEU,aAAa,EAAE,UAAUD,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ;AAEA,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}